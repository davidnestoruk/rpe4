package gridPuzzle;

import gridpuzzle.GridPuzzle.GridMove;

import org.testng.annotations.Test;

import static org.testng.AssertJUnit.assertEquals;

import org.testng.annotations.BeforeMethod;

import stringJumble.StringJumble;

@Test
public class GridPuzzleTesting {

	private GridPuzzle g1;

	@BeforeMethod
	public void beforeMethod() {

		g1 = new GridPuzzle(9, 11, 2, 2);
	}

	public void getCurrentPositionTest() {

		int[] test = new int[2];

		test = g1.getCurrentPos();

		assertEquals(2, test[1]);
	}

	public void setCurrentPosTest() {

		g1.setCurrentPos(1, 1);

		int[] test2 = new int[2];

		test2 = g1.getCurrentPos();

		assertEquals(1, test2[1]);

	}

	public void makeMoveTest() {

		g1.makeMove(GridMove.DOWN);

		// 2,3

		int[] test3 = new int[2];

		test3 = g1.getCurrentPos();

		assertEquals(3, test3[1]);

	}

	public void randomGridPuzzleTest() {
		
		GridPuzzle g1temp = g1.randomGridPuzzle(9, 11);
		
		assertEquals(g1.equals(g1temp), false);

	}

	public void isValidMoveTest() {

		assertEquals(g1.isValidMove(GridMove.DOWN), true);

		assertEquals(g1.isValidMove(GridMove.UP), false);
	}

	public void isBlockedTest() {

		assertEquals(g1.isBlocked(2, 1, GridMove.DOWN), true);

		assertEquals(g1.isBlocked(0, 0, GridMove.UP), false);

	}

	public void toStringTest() {

		assertEquals(g1.toString().equals(g1.toString()), true);
	}
}
